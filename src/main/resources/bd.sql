CREATE TABLE Person
(
    id   int PRIMARY KEY,
    name varchar(100),
    age  int
);

INSERT INTO Person(id, name, age)
VALUES (1, 'Test Person', 20);

SELECT *
FROM Person;

DROP TABLE Person;

CREATE TABLE Person
(
    id   int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    name varchar(100),
    age  int check ( age < 100 )
);

CREATE TABLE Item
(
    id        int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    person_id int          REFERENCES Person (id) ON DELETE SET NULL,
    item_name varchar(100) NOT NULL
);

INSERT INTO Person(name, age)
VALUES ('Tom', 35);
INSERT INTO Person(name, age)
VALUES ('Bob', 52);
INSERT INTO Person(name, age)
VALUES ('Katy', 14);

INSERT INTO Item(person_id, item_name)
VALUES (1, 'Book');
INSERT INTO Item(person_id, item_name)
VALUES (1, 'AirPods');
INSERT INTO Item(person_id, item_name)
VALUES (2, 'Iphone');
INSERT INTO Item(person_id, item_name)
VALUES (3, 'Kindle');
INSERT INTO Item(person_id, item_name)
VALUES (3, 'TV');
INSERT INTO Item(person_id, item_name)
VALUES (3, 'PlayStation');

CREATE TABLE Passport
(
    id              int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
    passport_number int NOT NULL,
    person_id       int UNIQUE REFERENCES Person (id) ON DELETE CASCADE
);

CREATE TABLE Actor
(
    id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(100) NOT NULL UNIQUE,
    age  int check ( age > 0 )
);

CREATE TABLE Movie
(
    id                 int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name               varchar(200) NOT NULL,
    year_of_production int check ( year_of_production > 1900 )
);

--Создаем связывающую таблицу (JOIN TABLE)
CREATE TABLE Actor_Movie
(
    actor_id int REFERENCES Actor (id),
    movie_id int REFERENCES Movie (id),
    PRIMARY KEY (actor_id, movie_id)
);
